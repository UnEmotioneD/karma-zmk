#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define ABC 0
#define NUM 1
#define SYM 2
#define FUN 3
#define NAV 4
#define MED 5
#define OPR 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <150>;
    tapping-term-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS BACKSPACE>; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
    };

    macros {
        gif: gif {
            label = "giphy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N2>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp G &kp I &kp F>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp Q  &kp W               &kp E           &kp R                     &kp T        &kp Y         &kp U            &kp I            &kp O                &kp P
&kp A  &mt LEFT_CONTROL S  &mt LEFT_ALT D  &mt LEFT_GUI F            &kp G        &kp H         &mt RIGHT_GUI J  &mt RIGHT_ALT K  &mt RIGHT_CONTROL L  &mt RIGHT_SHIFT SEMICOLON
&kp Z  &kp X               &kp C           &kp V                     &kp B        &kp N         &kp M            &kp COMMA        &kp DOT              &kp FSLH
                           &kp TAB         &mt LEFT_SHIFT BACKSPACE  &lt 1 ENTER  &lt 2 ESCAPE  &lt 4 SPACE      &kp F16
            >;
        };

        layer_1 {
            bindings = <
&kp EXCL  &kp AT    &kp HASH  &kp DOLLAR      &kp PERCENT      &kp CARET       &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp N1    &kp N2    &kp N3    &kp N4          &kp N5           &kp N6          &kp N7         &kp N8        &kp N9                &kp N0
&none     &kp LBKT  &kp RBKT  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp UNDERSCORE  &kp MINUS      &trans        &trans                &kp EQUAL
                    &trans    &trans          &trans           &lt 3 ESCAPE    &trans         &trans
            >;
        };

        layer_2 {
            bindings = <
&kp F9  &kp F10  &kp F11  &kp F12  &kp INSERT   &kp C_MUTE  &kp PAGE_UP   &kp PAGE_DOWN  &kp C_PLAY  &kp DELETE
&kp F5  &kp F6   &kp F7   &kp F8   &kp HOME     &kp LEFT    &kp DOWN      &kp UP_ARROW   &kp RIGHT   &kp C_BRIGHTNESS_INC
&kp F1  &kp F2   &kp F3   &kp F4   &kp END      &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP   &kp C_NEXT  &kp C_BRIGHTNESS_DEC
                 &trans   &trans   &lt 3 ENTER  &trans      &trans        &trans
            >;
        };

        layer_3 {
            bindings = <
&kp LA(LG(L))  &kp LG(NUMBER_1)  &kp LG(NUMBER_4)  &kp LG(N8)         &kp LS(LC(R))    &bt BT_SEL 0          &bt BT_SEL 1          &bt BT_SEL 2    &bt BT_SEL 3   &bt BT_CLR
&kp LA(LG(Q))  &kp LG(F12)       &kp LC(PAGE_UP)   &kp LC(PAGE_DOWN)  &kp LS(LG(F11))  &kp LC(F5)            &kp LC(GRAVE)         &kp LS(LG(M))   &kp LS(LG(E))  &kp LS(LG(P))
&kp LS(LG(F))  &kp LS(LG(O))     &kp LA(LG(R))     &kp LA(LG(S))      &kp LS(LG(R))    &kp LS(LG(NUMBER_3))  &kp LS(LG(NUMBER_4))  &kp LS(LG(N5))  &kp LS(LG(F))  &kp LS(LA(F))
                                 &trans            &trans             &trans           &trans                &trans                &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &kp TILDE  &kp DOUBLE_QUOTES  &kp PIPE              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp GRAVE  &kp SQT            &kp NON_US_BACKSLASH  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans             &trans                &trans  &trans  &trans  &trans  &trans  &trans
                   &trans             &trans                &trans  &trans  &trans  &trans
            >;
        };
    };
};
